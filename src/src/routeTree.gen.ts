/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ResourcesImport } from './routes/Resources'
import { Route as ResourcesIndexImport } from './routes/Resources.index'
import { Route as ResourcesIdImport } from './routes/Resources.$id'

// Create Virtual Routes

const WorkTypesLazyImport = createFileRoute('/WorkTypes')()
const TasksLazyImport = createFileRoute('/Tasks')()
const ScheduleLazyImport = createFileRoute('/Schedule')()
const ProjectsLazyImport = createFileRoute('/Projects')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const WorkTypesLazyRoute = WorkTypesLazyImport.update({
  path: '/WorkTypes',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/WorkTypes.lazy').then((d) => d.Route))

const TasksLazyRoute = TasksLazyImport.update({
  path: '/Tasks',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/Tasks.lazy').then((d) => d.Route))

const ScheduleLazyRoute = ScheduleLazyImport.update({
  path: '/Schedule',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/Schedule.lazy').then((d) => d.Route))

const ProjectsLazyRoute = ProjectsLazyImport.update({
  path: '/Projects',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/Projects.lazy').then((d) => d.Route))

const ResourcesRoute = ResourcesImport.update({
  path: '/Resources',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const ResourcesIndexRoute = ResourcesIndexImport.update({
  path: '/',
  getParentRoute: () => ResourcesRoute,
} as any)

const ResourcesIdRoute = ResourcesIdImport.update({
  path: '/$id',
  getParentRoute: () => ResourcesRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/Resources': {
      preLoaderRoute: typeof ResourcesImport
      parentRoute: typeof rootRoute
    }
    '/Projects': {
      preLoaderRoute: typeof ProjectsLazyImport
      parentRoute: typeof rootRoute
    }
    '/Schedule': {
      preLoaderRoute: typeof ScheduleLazyImport
      parentRoute: typeof rootRoute
    }
    '/Tasks': {
      preLoaderRoute: typeof TasksLazyImport
      parentRoute: typeof rootRoute
    }
    '/WorkTypes': {
      preLoaderRoute: typeof WorkTypesLazyImport
      parentRoute: typeof rootRoute
    }
    '/Resources/$id': {
      preLoaderRoute: typeof ResourcesIdImport
      parentRoute: typeof ResourcesImport
    }
    '/Resources/': {
      preLoaderRoute: typeof ResourcesIndexImport
      parentRoute: typeof ResourcesImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  ResourcesRoute.addChildren([ResourcesIdRoute, ResourcesIndexRoute]),
  ProjectsLazyRoute,
  ScheduleLazyRoute,
  TasksLazyRoute,
  WorkTypesLazyRoute,
])

/* prettier-ignore-end */
